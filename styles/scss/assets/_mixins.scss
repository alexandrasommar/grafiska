/* BROWSER PREFIX FOR FLEXBOX */

@mixin flexbox() {
	display: -webkit-box;      /* OLD - iOS 6-, Safari 3.1-6 */
	display: -moz-box;         /* OLD - Firefox 19- (buggy but mostly works) */
	display: -ms-flexbox;      /* IE 10 */
	display: -webkit-flex;     /* Chrome */
	display: flex;
}
@mixin align-items($value) {
	-moz-box-align: $value;
	-ms-flex-align: $value;
	-webkit-align-items: $value;
	-webkit-box-align: $value;
	align-items: $value;

	@if align-items($value == flex-end) {
		-ms-flex-align: end;
	}
}
@mixin flex-direction($direction) {
	-ms-flex-direction: $direction;
	-webkit-box-direction: $direction;
	-webkit-flex-direction: $direction;
	flex-direction: $direction;
}
@mixin flex($grow) {
	-webkit-box-flex-grow: $grow;
	-webkit-flex: $grow;
	-ms-flex: $grow;
	flex: $grow;
}
@mixin justify-content($value) {
	-webkit-box-pack: $value;
	-moz-box-pack: $value;
	-ms-flex-pack: $value;
	justify-content: $value;

	@if justify-content($value == space-between) {
		-ms-flex-pack: justify;
		}
	@if justify-content($value == space-around) {
		-ms-flex-pack: distribute;
	}
}

// Flex Line Wrapping
// - applies to: flex containers
// nowrap | wrap | wrap-reverse
@mixin flex-wrap($value) {
	-webkit-box-flex-wrap: $value;
	-webkit-flex-wrap: $value;
	-ms-flex-wrap: $value;
	flex-wrap: $value;
}

@mixin colorchange {
  $colors: $lightblue, $darkblue, $green, $pink;
  @for $i from 1 through length($colors) {
    p:nth-child(#{length($colors)}n+#{$i}) {
        background: nth($colors, $i);
        margin: 0;
    }
  }
}
@mixin borderline {
  border: 2px solid #000;
}
